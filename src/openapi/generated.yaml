openapi: 3.0.0
info:
  version: 1.0.0
  title: Bunny httpStatusMap API
  description: Bunny httpStatusMap API description
servers:
  - url: http://example.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SuccessProtocol:
      type: object
      properties:
        http:
          type: object
          properties:
            code:
              type: number
              example: 200
            message:
              type: string
              example: OK
            description:
              type: string
              example: indicates that the request has succeeded.
          required:
            - code
            - message
            - description
        bizLogic:
          type: object
          properties:
            code:
              type: string
              example: APP_PRODUCT_0003
            message:
              type: string
              example: Get product success
          required:
            - code
            - message
        resData:
          nullable: true
          example:
            id: dc36b869-8c59-4036-8ec9-14eb389928c6
            create_at: 2023-08-01T06:18:23.531Z
            update_at: 2023-08-01T06:18:41.421Z
            title: Canon EOS 1500D DSLR Camera with 18-55mm Lens
            description: Designed for first-time DSLR owners who want impressive results
              straight out of the box, capture those magic moments no matter
              your level with the EOS 1500D. With easy to use automatic shooting
              modes, large 24.1 MP sensor, Canon Camera Connect app integration
              and built-in feature guide, EOS 1500D is always ready to go.
            price: "6068.98"
            image: https://i.imgur.com/QlRphfQ.jpg
      required:
        - http
        - bizLogic
    ValidationFailedProtocol:
      type: object
      properties:
        http:
          type: object
          properties:
            code:
              type: number
              example: 400
            message:
              type: string
              example: Bad Request
            description:
              type: string
              example: indicates that the server cannot or will not process the request
                because the received syntax is invalid, nonsensical, or exceeds
                some limitation on what the server is willing to process.
          required:
            - code
            - message
            - description
        bizLogic:
          type: object
          properties:
            code:
              type: string
              example: SYSTEM_0002
            message:
              type: string
              example: Request validated failed
            payload:
              type: array
              items:
                nullable: true
              example:
                - code: invalid_type
                  expected: string
                  received: undefined
                  path:
                    - query
                    - skip
                  message: skip is required
                - code: invalid_type
                  expected: string
                  received: undefined
                  path:
                    - query
                    - take
                  message: take is required
          required:
            - code
            - message
            - payload
        resData:
          nullable: true
          example: {}
      required:
        - http
        - bizLogic
    InternalServerErrorProtocol:
      type: object
      properties:
        http:
          type: object
          properties:
            code:
              type: number
              example: 500
            message:
              type: string
              example: Internal Server Error
            description:
              type: string
              example: indicates that the server encountered an unexpected condition that
                prevented it from fulfilling the request.
          required:
            - code
            - message
            - description
        bizLogic:
          type: object
          properties:
            code:
              type: string
              example: SYSTEM_0001
            message:
              type: string
              example: Internal server error
            payload:
              nullable: true
              example:
                code: "23505"
                message: duplicate key value violates unique constraint
                  "UQ_e12875dfb3b1d92d7d7c5377e22"
                stack: >-
                  QueryFailedError: duplicate key value violates unique
                  constraint "UQ_e12875dfb3b1d92d7d7c5377e22"
                      at PostgresQueryRunner.query (/Users/revone/projects/bunny-rest/src/driver/postgres/PostgresQueryRunner.ts:299:19)
                      at processTicksAndRejections (node:internal/process/task_queues:95:5)
                      at InsertQueryBuilder.execute (/Users/revone/projects/bunny-rest/src/query-builder/InsertQueryBuilder.ts:163:33)
                      at SubjectExecutor.executeInsertOperations (/Users/revone/projects/bunny-rest/src/persistence/SubjectExecutor.ts:434:42)
                      at SubjectExecutor.execute (/Users/revone/projects/bunny-rest/src/persistence/SubjectExecutor.ts:137:9)
                      at EntityPersistExecutor.execute (/Users/revone/projects/bunny-rest/src/persistence/EntityPersistExecutor.ts:182:21)
          required:
            - code
            - message
        resData:
          nullable: true
          example: {}
      required:
        - http
        - bizLogic
  parameters: {}
paths:
  /api/v1/posts:
    get:
      description: Get posts data
      summary: Get posts
      tags:
        - Post
      parameters:
        - schema:
            type: string
            example: "6"
          required: true
          name: from
          in: query
        - schema:
            type: string
            example: "10"
          required: true
          name: offset
          in: query
      responses:
        "200":
          description: Object with user data.
          content: {}
        "204":
          description: No content - successful operation
  "/api/v1/posts/{id}":
    get:
      description: Get post data
      summary: Get post
      tags:
        - Post
      parameters:
        - schema:
            type: string
            example: a313ad97-76f2-443f-be35-c37a0cbf3886
          required: true
          name: id
          in: path
      responses:
        "200":
          description: Object with user data.
          content: {}
        "204":
          description: No content - successful operation
  "/api/v1/products/{id}":
    get:
      description: Get a single product by the id
      summary: Get a single product
      tags:
        - Product
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            example: d8803348-8521-42d4-b9a6-40c88902a800
          required: true
          name: id
          in: path
          description: The id of the product
        - schema:
            type: string
            example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjA4OTc0NDFhLWIwM2ItNGRiYy04YjUzLTFmMWI3ZGYzMmIyNSIsImNyZWF0ZV9hdCI6IjIwMjMtMDctMTdUMDM6NDc6MjAuMDQyWiIsInVwZGF0ZV9hdCI6IjIwMjMtMDctMTdUMDM6NDc6MjAuMDQyWiIsImVtYWlsIjoidGVzdEBleGFtcGxlLmNvbSIsIm5hbWUiOiJQYWJsbyBSaW9zIiwiaWF0IjoxNjg5NjcyOTE4LCJleHAiOjE2ODk2NzY1MTh9.ltd7QrDKTRp9ticxVd0lBsqFh6Cq9rnVdN2c-yos1iyv8lGBKqJy1wxWottTOwiTQH6UKi3wQ6YjhjTd3y46J6aXSCOWM7thBaJSBTJHUsDoZ_tgV3gN1Cf1uTjrQSxwWNG1sOr5TPf37XkLqWWXV0tztpFyaj_VJkrzXPK6hFTHorJ30IVuJ91GRgoCh7fUktxWasujCi7k5_UFrgVAMDJpVOrXdCY6a6Wx9YxpgXu8LAIj3PDMceWaC_cOcWihKH5Yf0wY2bh6yGesxtZXoelM78Zb8xFdSaIjEDHWqmab10d1DIjdoM5cCmp1VZqFfd_sRY1NauRElfbaCkCQZ7Z31n5ZVf5ZCipNOrDJgTm50v0TE2xZeDH1SFhnltME6tXPh3EAPfolraqMWsTvAmbC7jorxs8oNCEihxnX9GTfz1k2cChfd-0_mPMeRO85WpAKpP2RBE_o-p_7nnoUCfulbXukjr-D5BrvaJTkItLN0_taApc2QrU5uYiGHIMsF4Fx0TjzNAG2qsjRDthZnnL8e6VcJHqVmJsVkCrJOpVzKN8_ix9M11gu22603Zojg7KCGLkZ479o6qyaje6xMoBG_SGQgE06C4FT4h8w6DyNrtP1j84mTwPQ7iHQyBtM1sbe2jeiMv5uxDbM4JtjOi5ENffT31X2Pygb65z-ZTU
          required: true
          name: x-refresh
          in: header
          description: Refresh token
      responses:
        "200":
          description: Get product success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessProtocol"
        "400":
          description: Request validated failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationFailedProtocol"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorProtocol"
  /api/v1/sessions:
    post:
      description: Create a session
      summary: Create a session
      tags:
        - Auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
            example:
              email: test@example.com
              password: Password_123
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad request
        "409":
          description: Conflict
  /api/v1/users:
    post:
      description: Register a user
      summary: Register a user
      tags:
        - User
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                  minLength: 6
                passwordConfirmation:
                  type: string
                email:
                  type: string
                  format: email
              required:
                - name
                - password
                - passwordConfirmation
                - email
            example:
              name: Pablo Rios
              password: Password_123
              passwordConfirmation: Password_123
              email: test@example.com
      responses:
        "200":
          description: Success
          content: {}
        "400":
          description: Bad request
        "409":
          description: Conflict

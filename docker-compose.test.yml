version: '3.7'
services:
  nginx-test:
    image: nginx:stable-alpine
    container_name: nginx-test
    ports:
      - "8081:8081"
      - "9091:9091"
      - "7071:7071"
    volumes:
      - ./nginx/default.test.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - bunny-rest-test

  bunny-rest-test:
    image: bunny-rest-test
    build:
      context: ./
      args:
        PKG_INSTALL_ENV: production
#   If you want to synchronize code in the testing environment in real-time, you can enable the mapping of volumes.
#    volumes:
#      - ./:/bunny-rest
#      - /bunny-rest/node_modules
#    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=8081
      - MONGO_DB_URI=mongodb://root_test:root_test_password@mongo-test:27017/bunny_rest_test?authSource=admin
      - SALT_WORK_FACTOR=10
      - ACCESS_TOKEN_TTL=1m
      - REFRESH_TOKEN_TTL=1y
      - METRICS_PORT=9091
      - REDIS_URI=redis://@redis-test:6379
      - POSTGRES_URI=postgresql://postgres:root_test_password@postgres-test:5432/bunny_rest_test
      - APOLLO_PORT=7071
      - CORS_ORIGINS=http://test-a:80,http://test-b:80
      - OPEN_API_URL=http://example.com
    entrypoint: sh -c "yarn build:compose && yarn serve:compose"
    expose:
      - "8081"
      - "9091"
      - "7071"
    depends_on:
      - postgres-test
      - mongo-test
      - redis-test

  postgres-test:
    image: postgres
    container_name: postgres-test
    environment:
      - POSTGRES_PASSWORD=root_test_password
      - POSTGRES_DB=bunny_rest_test
    volumes:
      - postgres-test:/var/lib/postgresql/data

  mongo-test:
    image: mongo
    container_name: mongo-test
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root_test
      - MONGO_INITDB_ROOT_PASSWORD=root_test_password
    volumes:
      - mongo-test:/data/db

  redis-test:
    image: redis
    container_name: redis-test
    volumes:
      - redis-test:/data


volumes:
  postgres-test:
  mongo-test:
  redis-test:
